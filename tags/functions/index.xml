<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functions on Leonardo Zamariola</title>
    <link>https://zamariola.com.br/tags/functions/</link>
    <description>Recent content in Functions on Leonardo Zamariola</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Aug 2025 18:09:27 -0300</lastBuildDate>
    <atom:link href="https://zamariola.com.br/tags/functions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is the SOLID pattern and why you should avoid it</title>
      <link>https://zamariola.com.br/post/what-is-solid-why-you-should-avoid-it/</link>
      <pubDate>Sat, 23 Aug 2025 18:09:27 -0300</pubDate>
      <guid>https://zamariola.com.br/post/what-is-solid-why-you-should-avoid-it/</guid>
      <description>What is SOLID The SOLID is an acronym created in 2004 based on principles that Uncle Bob introduced in the 2000s to identify the best practices of software design.&#xA;ðŸ’¡ Disclaimer: I&amp;rsquo;m not giving a full description of the SOLID pattern because a lot of folks have done that. Digital Ocean has done that and the Uncle Bob himself has done that Although the SOLID principles may apply to any object-oriented design, they usually bring with them the Clean Code and Clean Architecture philosophies.</description>
    </item>
    <item>
      <title>Why and how you should code to interfaces - and high-order functions</title>
      <link>https://zamariola.com.br/post/why-and-how-you-should-code-to-interfaces/</link>
      <pubDate>Thu, 16 May 2019 18:16:13 -0300</pubDate>
      <guid>https://zamariola.com.br/post/why-and-how-you-should-code-to-interfaces/</guid>
      <description>One famous debate that emerges in every design discussion is about interfaces. As always, each programmer has a different conception about it and itâ€™s something almost inevitable to spend hours arguing about. Even when the discussion isnâ€™t about whether or not we should use it, itâ€™s about how to use it. As a programmer, I have my own opinion as well. I expect to give you an overview about the importance of interfaces when you should or not use it, and what you can apply it to.</description>
    </item>
  </channel>
</rss>
