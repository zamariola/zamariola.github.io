<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Leonardo Zamariola</title>
    <link>http://zamariola.com.br/tags/development/</link>
    <description>Recent content in Development on Leonardo Zamariola</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Jul 2018 21:48:29 -0300</lastBuildDate>
    
	<atom:link href="http://zamariola.com.br/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hybris Good Practices I</title>
      <link>http://zamariola.com.br/post/hybris-good-practices-i/</link>
      <pubDate>Thu, 26 Jul 2018 21:48:29 -0300</pubDate>
      
      <guid>http://zamariola.com.br/post/hybris-good-practices-i/</guid>
      <description>1) Name your classes/interfaces with specific names instead of &amp;ldquo;Default&amp;rdquo; or &amp;ldquo;YourCustumer&amp;rdquo; prefix. First of all, we have to keep this important thing in mind: we are coding general and abstract business and technical rules. Coincidentally, these rules are being used by our customer. (To make things clear, the customer here means the company that are paying you or your employer to customize the hybris).
Suppose that you are defining a new way of adding a product to cart, that is, you will add the product (default behavior) and change all quantities to one (new behaviour).</description>
    </item>
    
  </channel>
</rss>